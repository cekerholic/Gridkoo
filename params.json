{"name":"Gridkoo","tagline":"Gridkoo - A simple SCSS/Compass Grid plugin","body":"# Gridkoo - A simple SCSS/Compass Grid plugin\r\nThis is a simple SCSS plugin to easily create grid system in your project.\r\n\r\n## Usage\r\n\r\n### Setting the grid\r\n\r\nI assume your project structure is like this:\r\n\t\r\n\t/project-folder\r\n\t\tstyle.scss\r\n\t\t/partials //This is the directory of your Sass files\r\n\r\nCopy `_grid.scss` to `partials` directory. Then import it from `style.css` using import method `@import \"partials/grid\";`. Then you have to setting the grid using variables like this:\r\n\t\r\n\t// Grid variable\r\n\t// ------------------\r\n\t$total-cols             : 12; //Total Columns\r\n\t$col-width              : 60px; //Column width, you can use 'em', '%' or other valid css unit as well\r\n\t$gutter-width           : 20px; //Gutter width\r\n\t$side-gutter-width      : 10px; //Side Gutter width\r\n\r\n\t$show-grid-backgrounds  : true; // Showing the grid background, change to 'false' to hide the background\r\n\r\n### Using the grid\r\n\r\n#### Setting Grid Container\r\nFirst, set the container/wrapper of your site to center the element.\r\n\r\nExample:\r\n\t\r\n\t.wrapper {\r\n\t\t@include container;\r\n\t}\r\n\r\nCSS Output:\r\n\t\r\n\t.container {\r\n\t\t*zoom: 1;\r\n\t\tmargin: auto;\r\n\t\twidth: 960px;\r\n\t}\r\n\t.container:after {\r\n\t\tcontent: \"\";\r\n\t\tdisplay: table;\r\n\t\tclear: both;\r\n\t}\r\n\t\r\n#### The Grid Column\r\nUse `columns` mixin to set the width of an element.\r\n\r\nExample:\r\n\r\n\t.element {\r\n\t\t@include columns(4);\r\n\t}\r\n\r\nCSS Output:\r\n\r\n\t.element {\r\n\t\tdisplay: inline;\r\n\t\tfloat: left;\r\n\t\tmargin-right: 20px;\r\n\t\twidth: 300px;\r\n\t}\r\n\r\nIn case your element is in the first column within the parent, you'll need to use `alpha` mixin.\r\n\t\r\nExample:\r\n\t\r\n\t.element {\r\n\t\t@include columns(4);\r\n\t\t@include alpha;\r\n\t}\r\n\r\nCSS Output:\r\n\t\r\n\t.element {\r\n\t\tdisplay: inline;\r\n\t\tfloat: left;\r\n\t\tmargin-right: 20px;\r\n\t\twidth: 300px;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\r\nThen if your element is in the last columns, use the `omega` mixin.\r\n\r\nExample:\r\n\t\r\n\t.element {\r\n\t\t@include columns(4);\r\n\t\t@include omega;\r\n\t}\r\n\r\nCSS Output:\r\n\t\r\n\t.element {\r\n\t\tdisplay: inline;\r\n\t\tfloat: right;\r\n\t\tmargin-right: 10px;\r\n\t\twidth: 300px;\r\n\t}\r\n\r\n### Changelog\r\n* \t1.0.1\r\n\tAdding default variables\r\n* \t1.0.0\r\n\tInitial release","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}